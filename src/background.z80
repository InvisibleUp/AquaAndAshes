; Update parallax background timers
; Run once per increment of ScrollX
incParallax:
	ld a, [GlobalTimer]
	ld b, a
	ld hl, ParallaxLayer1

.Layer1:
	; Top updates every 4 frames
	and a, %11
	jr nz, .Layer2
	inc [hl]
.Layer2:
	inc hl
	ld b, a
	call Modulo3
	sub a, 0
	jr nz, .Layer3
	inc [hl]
.Layer3:
	inc hl
	bit 0, a
	jr nz, .return
	inc [hl]
.return:
	ret

; Update parallax background timers
; Run once per decrement of ScrollX
decParallax:
	ld a, [GlobalTimer]
	ld b, a
	ld hl, ParallaxLayer1

.Layer1:
	; Top updates every 4 frames
	and a, %11
	jr nz, .Layer2
	dec [hl]
.Layer2:
	inc hl
	ld b, a
	call Modulo3
	sub a, 0
	jr nz, .Layer3
	dec [hl]
.Layer3:
	inc hl
	bit 0, a
	jr nz, .return
	dec [hl]
.return:
	ret	

; LCD STAT interupt routine
scrollLayer1:
	; Set scroll position
	ld a, [ParallaxLayer1]
	ldh [GB_SCROLL_X], a

	; Set next HBLANK interrupt
	ld hl, scrollLayer2 
	ld a, h
	ldh [StatJmpLoc], a
	ld a, l
	ldh [StatJmpLoc+1], a
	ld a, 80
	ldh [GB_SCANLINE_TRIGGER], a

	pop hl
	pop af
	reti

scrollLayer2:
	; Set scroll position
	ld a, [ParallaxLayer2]
	ldh [GB_SCROLL_X], a

	; Set next HBLANK interrupt
	ld hl, scrollLayer2 
	ld a, h
	ldh [StatJmpLoc], a
	ld a, l
	ldh [StatJmpLoc+1], a
	ld a, 112
	ldh [GB_SCANLINE_TRIGGER], a

	pop hl
	pop af
	reti

scrollLayer3:
	; Set scroll position
	ld a, [ParallaxLayer3]
	ldh [GB_SCROLL_X], a

	; Disable HBlank
	;ld hl, lcdc_dummy
	;ld a, h
	;ldh [StatJmpLoc], a
	;ld a, l
	;ldh [StatJmpLoc+1], a
	xor a
	ldh [GB_SCANLINE_TRIGGER], a

	pop hl
	pop af
	reti